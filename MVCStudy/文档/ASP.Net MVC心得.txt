1、MVC优势首先是解耦，可维护性高，容易测试。程序员和美工共同关注的部分是业务实体即数据模型，其它的代码中的变量和逻辑美工并不关心。美工只要学会Razor语法操作model进行布局就可以。程序员在没有最终views时，可以使用简单的测试views进行观察和测试，最终再替换美工做的views。中间过程变量可以使用viewbag.XXX在view中调用，这些变量可以在美工设计好views后添加进去，由于不是业务实体，而是逻辑变量，所以不影响整个布局。这在php、asp混合编程是很难做到的，WebForm也不行，因为webform页面和后台编码其实是同一个类，无法分工。
2、MVC语言上的原理是“依赖注入”。A要调用B，但是不能在编译时就依赖B，因为后期可能要换B1、B2或换B测试版。可以想到，在A和B中间加接口IB，但是使用的时候还是需要依赖IB的具体实现。把IB作为参数传给A，A编译时只依赖IB，运行时才决定B的实现，就叫做依赖注入。该原理实现了MVC各层分离，又能代码智能提示。